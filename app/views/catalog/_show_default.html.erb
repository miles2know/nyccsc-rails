<%# default partial to display solr document fields in catalog show view -%>
<dl class="dl-horizontal  dl-invert">
  <% document_show_fields(document).each do |solr_fname, field| -%>
    <% if should_render_show_field? document, field %>
	    <dt class="blacklight-<%= solr_fname.parameterize %>"><%= render_document_show_field_label document, :field => solr_fname %></dt>
	    <dd class="blacklight-<%= solr_fname.parameterize %>"><%= render_document_show_field_value document, :field => solr_fname %></dd>
    <% end -%>
  <% end -%>
  
   <%# Including a linked data request here to retrieve RDF values OR get values from a sparql query -%>
   <%# Commented out but leaving in here for reference if we need to use this for some reason later -%>
<%
#jsonResult = get_linkeddata_result(document)
#displayResult = get_display_hash(jsonResult, document)
#Rails.logger.debug("Display result is #{displayResult.inspect}")
# displayResult.each do |result|
# 	displayValue = result["displayValue"]
 	# Not truncating display values here

         #  <dt class="blacklight-= result["name"] ">= result["displayName"] </dt>
		 #  <dd class="blacklight-= result["name"]">=displayValue </dd>
  
#end		                               		
%>

<%#  Trying out a full profile dump here as well, will comment out linked data request in favor of profile info instead -%>

<%
all_properties = retrieve_individual_profile_properties_for_show(document)
          # This is an array where each element is the property grou
          # and each property group is a hash which can have a list of properties
          # where each property is a hash which can have a statements array
          all_properties.each do|property_group|
            if property_group.has_key?("properties")
              properties = property_group["properties"]
              properties.each do |property|
                property_name = property["name"]
                statements = property["statements"]
                if (statements != nil and statements.length > 0)
                	statements.each do|statement|
                	Rails.logger.debug("Statement is #{statement.inspect}")
                	if(statement.has_key?("value") and statement["value"] != nil and statement["value"].gsub(/\s+/, "") != "")
 %>
           <dt class="blacklight-<%= property_name %>"><%=property_name.titleize%></dt>
		   <dd class="blacklight-<%= property_name %>"><%=statement["value"]%></dd>
   <%
   					end
   					end
                end

              end
            end
          end
%>
</dl>

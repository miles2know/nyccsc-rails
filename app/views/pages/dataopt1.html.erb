<% content_for :title do %>
  Data Product | NY Climate Change Science Clearinghouse
<% end %>

<style>

  .chart-container {
    width:100%;
    background-color: #fff;
    margin-top:30px;
  }

  .axis path, .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  .x.axis path {
    display: none;
  }

  .line {
    fill: none;
    stroke: black;
    stroke-opacity: 0.5;
    stroke-width: 2px;
  }

  .data-point {
    cursor: pointer;
  }

  .tooltip {
    background:#999 !important;
    color:#fff;
  }

  .legend rect {
    fill:white;
    stroke:black;
    opacity:0.8;
  }

</style>

<div id="main-container" class="container">
     
  <div class="row vertical-offset-md">

    <div class="col-lg-3 col-md-3">

      <div class="row" id="options">

      <form class="form-vertical">

        <fieldset>

          <h3>Canvas Options</h3>

          <button type="submit" id="addCanvas" class="btn btn-primary">Add Canvas</button>
          <button type="submit" id="clearCanvas" class="btn btn-primary">Clear Canvas</button>
        
        </fieldset>

        <hr/>

        <fieldset>

          <h3>Chart Options</h3>
          <div class="form-group">
            <label for="county">Select Region:</label>
            <select id="county" name="county" class="form-control"> 
               <%= render 'pages/shared/counties' %>
            </select>
          </div>

          <div class="form-group">
            <label for="data-product">Select Data Product:</label>
            <select id="data-product" name="data-product" class="form-control"></select>
          </div>

          <div class="form-group">
            <label for="date-range">Select Range:</label>
            <input type="text" id="daterange" name="daterange" value="" />
            <input type="hidden" name="startDate" id="startDate" />
            <input type="hidden" name="endDate" id="endDate" />
            <!-- <div class="input-daterange input-group" id="datepicker">
              <input type="text" class="input-sm form-control" name="startDate" id="startDate" />
              <span class="input-group-addon">to</span>
              <input type="text" class="input-sm form-control" name="endDate" id="endDate" />
            </div> -->
          </div>

          <div class="form-group">
            <label for="date-range">Select Color:</label>
            <select id="data-color" name="data-color" class="form-control">
              <option value="#f00">Red</option>
              <option value="#0f0">Green</option>
              <option value="#00f">Blue</option>
            </select>
          </div>

          <div class="form-group">
            <label for="date-range">Select Chart:</label>
            <select id="chart" name="chart" class="form-control">
              <!-- dynamically populated each time a chart is added to the page -->
              <option value="" disabled>Add Canvas</option>          
            </select>
          </div>

          <button type="submit" id="addData" class="btn btn-primary">Add Data</button>

        <!-- <button type="submit" id="clearCharts" class="btn btn-primary">Clear Charts</button> -->
      </form>

      </div>

    </div>

    <div class="col-lg-offset-1 col-lg-8 col-md-offset-1 col-md-8">

      <div class="chart-container" id="results"> </div>
      <!-- <div id="slider-range" style="width: 80%; margin-left:10%; margin-right:10%"></div> -->

    </div>

  </div>

</div>

<%= javascript_include_tag 'bootstrap.datepicker.js' %>
<%= javascript_include_tag 'data/chartData.js' %>
<%= javascript_include_tag 'data/opt1/chartD3.js' %>
<%= javascript_include_tag 'data/opt1/chartD3Layers.js' %>

<script type="text/javascript">

//global array containing all chart objects?
var charts = [];

function clearCharts(chart) {

  console.log('clear charts');

  if (chart) { //clear selected chart only

  } else { //otherwise clear all 
    //d3.select("g.parent").selectAll("*").remove();
    d3.selectAll("svg").remove();
  }

}

function zoomed (container) {
  container.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
}
   
var base_url = "/data/"


function fillSelectOptions() {

  //select element
  var $select = $('#data-product'), option;

  //request the JSON data and parse into the select element
  //local so skip this part
  //$.getJSON(url, function(data){
    //clear select
    $select.html('');

    //populate select
    $.each(data.products, function(key, val){
      option = '<option data-ylabel="' + val.ylabel + '" data-valueformat="' + val.valueFormat + '" data-short="' + val.short + '" value="' + val.url + '">' + val.title + '</option>'

      //console.log(option);
      $select.append(option);
    });

  //});

}

$(document).ready(function() {

  //populate data product select
  fillSelectOptions();  

  // $("#example_id").ionRangeSlider();
  $("#daterange").ionRangeSlider({
    min: 1895,
    max: 2015,
    from: 1895,   // FROM value
    to: 2014,     // TO value
    type: 'double',
    onChange: function(obj) {
      $('#startDate').val(obj.fromNumber);
      $('#endDate').val(obj.toNumber);
    }
  });

  // //settings for date picker 
  // $('.input-daterange').datepicker({
  //   format: "yyyy",
  //   //startView: 1,
  //   minViewMode: 2, //year only
  //   startDate: "-119y", // 1895
  //   endDate: "y"
  // });


  $("#addCanvas").click(function(e) {
    
    e.preventDefault();
    
    //current number of canvases/charts on page
    $sequence = $(".chart").length;

    //sequence number just sets title
    canvas.onLoad($sequence);
    //canvas.initializeAxes();

    //retrieve config - in case we allow it to be defined by user? 
    var config = {
      w:canvas.width(),
      h:canvas.height(),
      m: {
        top: canvas.margin().top,
        bottom: canvas.margin().bottom,
        left: canvas.margin().left,
        right: canvas.margin().right
      }
    }; 

    //add config to array so it can be retrieved when data is added
    charts.push(config);
    //charts.push(config);

    //add to chart options
    $('#chart')
         .append($("<option></option>")
         .attr("value",$sequence)
         .text('Chart ' + $sequence)); 

  });


  // clearPage -- all canvases
  $("#clearCanvas").click(function(e) {
  
    e.preventDefault();
    clearCharts();

    $('#chart').html('');

    //perhaps add back add canvas disabled option
    
  });

  //add data to existing canvas
  $("#addData").click(function(e) {
    
    e.preventDefault();

    var sequence = $('#chart').val();

    updateChart(sequence,charts[sequence]);

  });

});

</script>



